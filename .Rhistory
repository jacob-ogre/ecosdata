library(gitr)
Gqa("Update tagline of README.md")
Gpush()
options()
library(devtools)
document()
roxygen2::roxygenise()
document()
Sys.Date()
use_vignette("initialize")
document()
library(ecosdata)
library(ecosdata)
TECP_init <- get_TECP_baseline()
library(ecosdata)
document()
library(devtools)
library(gitr)
document()
library(ecosdata)
TECP_init <- get_TECP_baseline()
document()
library(ecosdata)
TECP_init <- get_TECP_baseline()
document()
library(ecosdata)
TECP_init <- get_TECP_baseline()
TECP_init$TECP_summary
library(dplyr)
library(ecosdata)
library(ecosscraper)
library(knitr)
dom <- filter_listed(TECP_table) %>% filter_domestic()
View(dom)
detach("package:ecosscraper", unload=TRUE)
library("ecosscraper", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(purrr)
document()
document()
document()
document()
library(ecosdata)
sp_tst <- get_species_baseline(dom$Species_Page[1:3], dom$Scientific_Name[1:3], FALSE)
library(ecosdata)
sp_tst <- get_species_baseline(dom$Species_Page[1:3], dom$Scientific_Name[1:3], FALSE)
library(ecosdata)
get_species_page_summary
ecosscraper::get_species_page_summary
library("ecosscraper", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ecosscraper", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ecosscraper::get_species_page_summary
sp_tst <- get_species_baseline(dom$Species_Page[1:3], dom$Scientific_Name[1:3], FALSE)
sp_base <- bind_rows(sp_tst)
library(dplyr)
sp_base <- bind_rows(sp_tst)
View(sp_base)
gitr::Gadd()
library(gitr)
Gstatus()
Gcommit("Add basic baseline functions, documentation.")
Gpush()
names(sp_base)
apg <- xml2::read_html("http://ecos.fws.gov/tess_public/profile/speciesProfile.action?spcode=Q24E")
txt <- rvest::html_text(apg)
digest::digest(txt)
txt
apg <- xml2::read_html("http://ecos.fws.gov/tess_public/profile/speciesProfile.action?spcode=Q24E")
txt <- rvest::html_text(apg)
digest::digest(txt)
bpg <- xml2::read_html("http://ecos.fws.gov/tess_public/profile/speciesProfile.action?spcode=Q24E")
tx2 <- rvest::html_text(bpg)
digest::digest(txt)
digest::digest(tx2)
txt == tx2
txtv <- unlist(strsplit(txt, split = "\n"))
length(txtv)
tx2v <- unlist(strsplit(tx2, split = "\n"))
length(tx2v)
head(txtv)
head(tx2v)
qq <- txtv == tx2v
head(qq)
sum(qq)
length(qq)
qq[qq == FALSE]
txtv[!qq]
tx2v[!qq]
detach("package:ecosscraper", unload=TRUE)
library("ecosscraper", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
sp_base <- get_species_baseline(TECP_table$Species_Page[1:3],
TECP_table$Scientific_Name[1:3],
FALSE)
library(ecosscraper)
sp_base <- get_species_baseline(TECP_table$Species_Page[1:3],
TECP_table$Scientific_Name[1:3],
FALSE)
library(ecosdata)
sp_base <- get_species_baseline(TECP_table$Species_Page[1:3],
TECP_table$Scientific_Name[1:3],
FALSE)
library(dplyr)
library(Gqa)
library(gitr)
sp_base <- bind_rows(sp_base)
View(sp_base)
apg
apg <- xml2::read_html("http://ecos.fws.gov/tess_public/profile/speciesProfile.action?spcode=R003
")
apg <- xml2::read_html("http://ecos.fws.gov/tess_public/profile/speciesProfile.action?spcode=R003")
apg_sum <- get_species_page_summary("http://ecos.fws.gov/tess_public/profile/speciesProfile.action?spcode=R003", "Abronia macrocarpa")
View(apg_sum)
apg_sum <- get_species_page_summary("http://ecos.fws.gov/tess_public/profile/speciesProfile.action?spcode=Q24E", "Abronia macrocarpa")
install.packages("RODBC")
install.packages("RODBC")
install.packages("RODBCext")
TECP_table <- get_TECP_table()
names(TECP_table)
digest::digest(TECP_table)
dim(TECP_table)
digest(arrange(TECP_table, Scientific_Name))
digest::digest(arrange(TECP_table, Scientific_Name))
library(devtools)
document()
document()
document()
library(ecosdata)
document()
document()
library(ecosdata)
document()
roxygen2::roxygenise()
library("ecosdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ecosdata)
rm(list=ls())
library(digest)
library(dplyr)
library(ecosdata)
library(ecosscraper)
library(knitr)
library(parallel)
library(purrr)
NCORE <- detectCores() - 1
TECP_init <- get_TECP_baseline()
TECP_table <- TECP_init$TECP_table
TECP_summary <- TECP_init$TECP_summary
library(ecosdata)
urls <- TECP_table$Species_Page[1:5]
fils <- paste0("~/Downloads/", TECP_table$Species_Code[1:5], "_",
Sys.Date(), ".html")
get_ECOS_page(urls[1], fils[1])
library(ecosdata)
get_ECOS_page(urls[1], fils[1])
library(ecosdata)
get_ECOS_page(urls[1], fils[1])
files <- map2(.x = urls, .y = fils, get_ECOS_page)
files
library(ecosdata)
urls <- TECP_table$Species_Page[1:3]
fils <- paste0("~/Downloads/", TECP_table$Species_Code[1:3], "_",
Sys.Date(), ".html")
results <- map2(.x = urls, .y = fils, get_ECOS_page)
results
a <- c("~/Downloads/AA", "~/Downloads/AB")
if(!dir.exists(a)) dir.create(a)
lapply(a, function(x) if(!dir.exists(x)) dir.create(x))
lapply(a, function(x) if(!dir.exists(x)) dir.create(x))
_ <- lapply(a, function(x) if(!dir.exists(x)) dir.create(x))
file.path(a, "hello.txt")
hh <- lapply(a, function(x) if(!dir.exists(x)) dir.create(x))
sum(hh)
sum(unlist(hh))
Gqa("Update initialize Rmd for phantom-based scrape.")
library(gitr)
Gqa("Update initialize Rmd for phantom-based scrape.")
Gpush()
dim(TECP_table)
Sys.time()
library(ecosscraper)
TECP_table <- get_TECP_table()
TECP_table <- get_TECP_table()
library(ecosdata)
library(digest)
library(dplyr)
library(ecosdata)
library(ecosscraper)
library(knitr)
library(parallel)
library(purrr)
NCORE <- detectCores() - 1
TECP_init <- get_TECP_baseline()
TECP_table <- TECP_init$TECP_table
TECP_summary <- TECP_init$TECP_summary
kable(head(TECP_table))
library(ecosdata)
library(ecosscraper)
urls <- TECP_table$Species_Page[1:5]
dirs <- paste0("~/Work/Data/ECOS/species/", TECP_table$Species_Code[1:5])
res <- lapply(dirs, function(x) if(!dir.exists(x)) dir.create(x, recursive = TRUE))
fils <-  file.path(dirs, paste0(TECP_table$Species_Code[1:5],
"_", Sys.Date(), ".html"))
head(fils)
results <- mcmapply(download_species_page, urls, fils,
mc.cores = NCORE, mc.preschedule = FALSE)
results
library(ecosdata)
results <- mcmapply(download_species_page, urls, fils,
mc.cores = NCORE, mc.preschedule = FALSE)
results
library(ecosscraper)
results <- mcmapply(download_species_page, urls, fils,
mc.cores = NCORE, mc.preschedule = FALSE)
results
library(ecosdata)
download_species_page
