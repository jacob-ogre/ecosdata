TSN <- unlist(lapply(files, get_species_tsn))
petitions_table <- lapply(TSN, get_petitions_table)
names(petitions_table) <- ECOS_dl_08Dec2016$species
petitions_table <- bind_rows(petitions_table)
if(dim(petitions_table)[0] > 0) kable(head(petitions_table))
if(dim(petitions_table)[1] > 0) kable(head(petitions_table))
co_urls <- filter(ECOS_species_links,
grepl(ECOS_species_links$link, pattern = "countiesBySpecies"))
counties_tabs <- mcmapply(get_counties,
co_urls$link, co_urls$Scientific_Name,
SIMPLIFY = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
counties_table <- bind_rows(counties_tabs)
kable(head(counties_table))
lns <- c(HCP_table$Doc_Link[1], "https://ecos.fws.gov/ecp0/conservationPlan/plan?plan_id=4330")
spp <- c("Abronia macrocarpa", "Myotis sodalis")
HCP_data <- mcmapply(get_conservation_plan_data,
lns, spp,
SIMPLIFY = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
get_conservation_plan_data(lns[1], spp[1])
get_conservation_plan_data(lns[2], spp[2])
HCP_data <- mcmapply(get_conservation_plan_data,
lns, spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
tt <- bind_rows(HCP_data)
View(tt)
HCP_docs <- mcmapply(get_conservation_plan_doc_links,
lns, spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
get_conservation_plan_doc_links(lns[1], spp[1])
library(ecosdata)
get_conservation_plan_doc_links(lns[1], spp[1])
get_conservation_plan_doc_links(lns[2], spp[2])
HCP_docs <- mcmapply(get_conservation_plan_doc_links,
lns, spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
rr <- bind_rows(HCP_docs)
View(rr)
HCP_data <- bind_rows(HCP_data)
HCP_docs <- bind_rows(HCP_docs)
rm(list=c("rr", "tt"))
files[1]
files[2]
names(tabs)
tabs[["1"]]
tabs[["2"]]
library(ecosdata)
tabs <- mclapply(files,
get_species_tables,
mc.cores = NCORE,
mc.preschedule = FALSE)
tab_names <- map(1:length(tabs), function(x) names(tabs[[x]])) %>%
unlist() %>% unique()
names(tabs) <- c(as.character(seq(1, length(tabs))))
species_table <- bind_tables(tabs, "SP_TAB")
fedreg_table <- bind_tables(tabs, "FR_TAB")
tabs[[2]]
library(ecosdata)
tabs <- mclapply(files,
get_species_tables,
mc.cores = NCORE,
mc.preschedule = FALSE)
tab_names <- map(1:length(tabs), function(x) names(tabs[[x]])) %>%
unlist() %>% unique()
names(tabs) <- c(as.character(seq(1, length(tabs))))
species_table <- bind_tables(tabs, "SP_TAB")
fedreg_table <- bind_tables(tabs, "FR_TAB")
recovery_table <- bind_tables(tabs, "REC_TAB")
adddoc_table <- bind_tables(tabs, "DOC_TAB")
fiveyr_table <- bind_tables(tabs, "REV_TAB")
crithab_table <- bind_tables(tabs, "CH_TAB")
HCP_table <- bind_tables(tabs, "HCP Plan Summaries")
SHA_table <- bind_tables(tabs, "SHA Plan Summaries")
CCA_table <- bind_tables(tabs, "CCA Plan Summaries")
CCAA_table <- bind_tables(tabs, "CCAA Plan Summaries")
kable(head(species_table, 10))
TSN <- unlist(lapply(files, get_species_tsn))
petitions_table <- lapply(TSN, get_petitions_table)
names(petitions_table) <- ECOS_dl_08Dec2016$species
petitions_table <- bind_rows(petitions_table)
if(dim(petitions_table)[1] > 0) kable(head(petitions_table))
co_urls <- filter(ECOS_species_links,
grepl(ECOS_species_links$link, pattern = "countiesBySpecies"))
counties_tabs <- mcmapply(get_counties,
co_urls$link, co_urls$Scientific_Name,
SIMPLIFY = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
counties_table <- bind_rows(counties_tabs)
kable(head(counties_table))
lns <- c(HCP_table$Doc_Link[1], "https://ecos.fws.gov/ecp0/conservationPlan/plan?plan_id=4330")
spp <- c("Abronia macrocarpa", "Myotis sodalis")
HCP_data <- mcmapply(get_conservation_plan_data,
lns, spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_data <- bind_rows(HCP_data)
HCP_docs <- mcmapply(get_conservation_plan_doc_links,
lns, spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_docs <- bind_rows(HCP_docs)
HCP_table
HCP_url <- HCP_table$Doc_Link
HCP_spp <- HCP_table$Species
HCP_data <- mcmapply(get_conservation_plan_data,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_data <- bind_rows(HCP_data)
HCP_docs <- mcmapply(get_conservation_plan_doc_links,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_docs <- bind_rows(HCP_docs)
HCP_url <- HCP_table$Doc_Link
HCP_spp <- HCP_table$Species
HCP_data <- mcmapply(get_conservation_plan_data,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_data <- bind_rows(HCP_data)
save(HCP_data, file = file.path(BASED, "rda", "HCP_data.rda"))
HCP_docs <- mcmapply(get_conservation_plan_doc_links,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_docs <- bind_rows(HCP_docs)
save(HCP_docs, file = file.path(BASED, "rda", "HCP_docs.rda"))
SHA_url <- SHA_table$Doc_Link
SHA_spp <- SHA_table$Species
SHA_data <- mcmapply(get_conservation_plan_data,
SHA_url, SHA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
SHA_data <- bind_rows(SHA_data)
save(SHA_data, file = file.path(BASED, "rda", "SHA_data.rda"))
SHA_docs <- mcmapply(get_conservation_plan_doc_links,
SHA_url, SHA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
SHA_docs <- bind_rows(SHA_docs)
save(SHA_docs, file = file.path(BASED, "rda", "SHA_docs.rda"))
CCA_url <- CCA_table$Doc_Link
CCA_spp <- CCA_table$Species
CCA_data <- mcmapply(get_conservation_plan_data,
CCA_url, CCA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCA_data <- bind_rows(CCA_data)
save(CCA_data, file = file.path(BASED, "rda", "CCA_data.rda"))
CCA_docs <- mcmapply(get_conservation_plan_doc_links,
CCA_url, CCA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCA_docs <- bind_rows(CCA_docs)
save(CCA_docs, file = file.path(BASED, "rda", "CCA_docs.rda"))
CCAA_url <- CCAA_table$Doc_Link
CCAA_spp <- CCAA_table$Species
CCAA_data <- mcmapply(get_conservation_plan_data,
CCAA_url, CCAA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCAA_data <- bind_rows(CCAA_data)
save(CCAA_data, file = file.path(BASED, "rda", "CCAA_data.rda"))
CCAA_docs <- mcmapply(get_conservation_plan_doc_links,
CCAA_url, CCAA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCAA_docs <- bind_rows(CCAA_docs)
save(CCAA_docs, file = file.path(BASED, "rda", "CCAA_docs.rda"))
View(CCA_table)
######################################################################
# The initial scraping was done 07 Dec 2016 ca. 2am, but other R code chunks
# run later in the day to
urls <- TECP_table$Species_Page[1:20]
dirs <- paste0(BASED, "/species/", TECP_table$Species_Code[1:20])
res <- lapply(dirs, function(x) if(!dir.exists(x)) dir.create(x, recursive = TRUE))
fils <-  file.path(dirs, paste0(TECP_table$Species_Code[1:20],
"_", Sys.Date(), ".html"))
results <- mcmapply(download_species_page,
urls, fils,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
results <- bind_rows(results)
results$species <- TECP_table$Scientific_Name[1:20]
ECOS_dl_08Dec2016 <- results
save(ECOS_dl_08Dec2016,
file = paste0(BASED, "/rda/ECOS_dl_08Dec2016.rda"))
sp_links <- mclapply(files,
get_species_links,
mc.cores = NCORE,
mc.preschedule = FALSE)
ECOS_species_links <- bind_rows(sp_links)
kable(head(ECOS_species_links, 10))
sp_links <- mclapply(files,
get_species_links,
mc.cores = NCORE,
mc.preschedule = FALSE)
ECOS_species_links <- bind_rows(sp_links)
save(ECOS_species_links,
file = file.path(BASED, "rda", "ECOS_species_links.rda"))
kable(head(ECOS_species_links, 10))
img <- filter(ECOS_species_links,
grepl(ECOS_species_links$link,
pattern = "jpg$|JPG$|gif$|png$"))
dim(img)
kable(head(img))
tabs <- mclapply(files,
get_species_tables,
mc.cores = NCORE,
mc.preschedule = FALSE)
tab_names <- map(1:length(tabs), function(x) names(tabs[[x]])) %>%
unlist() %>% unique()
names(tabs) <- c(as.character(seq(1, length(tabs))))
species_table <- bind_tables(tabs, "SP_TAB")
fedreg_table <- bind_tables(tabs, "FR_TAB")
recovery_table <- bind_tables(tabs, "REC_TAB")
adddoc_table <- bind_tables(tabs, "DOC_TAB")
fiveyr_table <- bind_tables(tabs, "REV_TAB")
crithab_table <- bind_tables(tabs, "CH_TAB")
HCP_table <- bind_tables(tabs, "HCP Plan Summaries")
SHA_table <- bind_tables(tabs, "SHA Plan Summaries")
CCA_table <- bind_tables(tabs, "CCA Plan Summaries")
CCAA_table <- bind_tables(tabs, "CCAA Plan Summaries")
kable(head(species_table, 10))
TSN <- unlist(lapply(files, get_species_tsn))
petitions_table <- lapply(TSN, get_petitions_table)
names(petitions_table) <- ECOS_dl_08Dec2016$species
petitions_table <- bind_rows(petitions_table)
if(dim(petitions_table)[1] > 0) kable(head(petitions_table))
TSN <- unlist(lapply(files, get_species_tsn))
petitions_table <- lapply(TSN, get_petitions_table)
ECOS_dl_08Dec2016
ECOS_dl_08Dec2016$dest
files <- ECOS_dl_08Dec2016$dest
md5s <- mclapply(files,
species_page_md5,
mc.cores = NCORE,
mc.preschedule = FALSE)
ECOS_dl_08Dec2016$MD5 <- unlist(md5s)
save(ECOS_dl_08Dec2016,
file = paste0(BASED, "/rda/ECOS_dl_08Dec2016.rda"))
files
sp_links <- mclapply(files,
get_species_links,
mc.cores = NCORE,
mc.preschedule = FALSE)
ECOS_species_links <- bind_rows(sp_links)
save(ECOS_species_links,
file = file.path(BASED, "rda", "ECOS_species_links.rda"))
kable(head(ECOS_species_links, 10))
tabs <- mclapply(files,
get_species_tables,
mc.cores = NCORE,
mc.preschedule = FALSE)
tab_names <- map(1:length(tabs), function(x) names(tabs[[x]])) %>%
unlist() %>% unique()
names(tabs) <- c(as.character(seq(1, length(tabs))))
species_table <- bind_tables(tabs, "SP_TAB")
fedreg_table <- bind_tables(tabs, "FR_TAB")
recovery_table <- bind_tables(tabs, "REC_TAB")
adddoc_table <- bind_tables(tabs, "DOC_TAB")
fiveyr_table <- bind_tables(tabs, "REV_TAB")
crithab_table <- bind_tables(tabs, "CH_TAB")
HCP_table <- bind_tables(tabs, "HCP Plan Summaries")
SHA_table <- bind_tables(tabs, "SHA Plan Summaries")
CCA_table <- bind_tables(tabs, "CCA Plan Summaries")
CCAA_table <- bind_tables(tabs, "CCAA Plan Summaries")
kable(head(species_table, 10))
TSN <- unlist(lapply(files, get_species_tsn))
TSN
files
TSN
tt <- get_petitions_table(1264)
tt
View(ECOS_dl_08Dec2016)
urls <- TECP_table$Species_Page[1:20]
dirs <- paste0(BASED, "/species/", TECP_table$Species_Code[1:20])
res <- lapply(dirs, function(x) if(!dir.exists(x)) dir.create(x, recursive = TRUE))
fils <-  file.path(dirs, paste0(TECP_table$Species_Code[1:20],
"_", Sys.Date(), ".html"))
results <- mcmapply(download_species_page,
urls, fils,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
results <- bind_rows(results)
results$species <- TECP_table$Scientific_Name[1:20]
ECOS_dl_08Dec2016 <- results
files <- ECOS_dl_08Dec2016$dest
md5s <- mclapply(files,
species_page_md5,
mc.cores = NCORE,
mc.preschedule = FALSE)
ECOS_dl_08Dec2016$MD5 <- unlist(md5s)
save(ECOS_dl_08Dec2016,
file = paste0(BASED, "/rda/ECOS_dl_08Dec2016.rda"))
kable(head(ECOS_dl_08Dec2016, 10))
tabs <- mclapply(files,
get_species_tables,
mc.cores = NCORE,
mc.preschedule = FALSE)
tab_names <- map(1:length(tabs), function(x) names(tabs[[x]])) %>%
unlist() %>% unique()
names(tabs) <- c(as.character(seq(1, length(tabs))))
species_table <- bind_tables(tabs, "SP_TAB")
fedreg_table <- bind_tables(tabs, "FR_TAB")
recovery_table <- bind_tables(tabs, "REC_TAB")
adddoc_table <- bind_tables(tabs, "DOC_TAB")
fiveyr_table <- bind_tables(tabs, "REV_TAB")
crithab_table <- bind_tables(tabs, "CH_TAB")
HCP_table <- bind_tables(tabs, "HCP Plan Summaries")
SHA_table <- bind_tables(tabs, "SHA Plan Summaries")
CCA_table <- bind_tables(tabs, "CCA Plan Summaries")
CCAA_table <- bind_tables(tabs, "CCAA Plan Summaries")
View(fedreg_table)
TSN <- unlist(lapply(files, get_species_tsn))
TSN
petitions_table <- lapply(TSN, get_petitions_table)
names(petitions_table) <- ECOS_dl_08Dec2016$species
petitions_table <- bind_rows(petitions_table)
if(dim(petitions_table)[1] > 0) kable(head(petitions_table))
co_urls <- filter(ECOS_species_links,
grepl(ECOS_species_links$link, pattern = "countiesBySpecies"))
counties_tabs <- mcmapply(get_counties,
co_urls$link, co_urls$Scientific_Name,
SIMPLIFY = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
counties_table <- bind_rows(counties_tabs)
kable(head(counties_table))
save(petitions_table,
file = file.path(BASED, "rda",
paste0("petitions_table_", Sys.Date(), ".rda")))
save(counties_table,
file = file.path(BASED, "rda",
paste0("counties_table_", Sys.Date(), ".rda")))
HCP_url <- HCP_table$Doc_Link
HCP_spp <- HCP_table$Species
HCP_data <- mcmapply(get_conservation_plan_data,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_data <- bind_rows(HCP_data)
save(HCP_data,
file = file.path(BASED, "rda",
paste0("HCP_data_", Sys.Date(), ".rda")))
View(HCP_data)
HCP_docs <- mcmapply(get_conservation_plan_doc_links,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_docs <- bind_rows(HCP_docs)
save(HCP_docs,
file = file.path(BASED, "rda",
paste0("HCP_docs_", Sys.Date(), ".rda")))
SHA_data <- mcmapply(get_conservation_plan_data,
SHA_url, SHA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
SHA_data <- bind_rows(SHA_data)
save(SHA_data,
file = file.path(BASED, "rda",
paste0("SHA_data_", Sys.Date(), ".rda")))
SHA_docs <- mcmapply(get_conservation_plan_doc_links,
SHA_url, SHA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
SHA_docs <- bind_rows(SHA_docs)
save(SHA_docs,
file = file.path(BASED, "rda",
paste0("SHA_docs_", Sys.Date(), ".rda")))
CCA_url <- CCA_table$Doc_Link
View(SHA_table)
SHA_url <- SHA_table$Doc_Link
HCP_url <- HCP_table$Doc_Link
HCP_spp <- HCP_table$Species
HCP_data <- mcmapply(get_conservation_plan_data,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_data <- bind_rows(HCP_data)
save(HCP_data,
file = file.path(BASED, "rda",
paste0("HCP_data_", Sys.Date(), ".rda")))
HCP_docs <- mcmapply(get_conservation_plan_doc_links,
HCP_url, HCP_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
HCP_docs <- bind_rows(HCP_docs)
save(HCP_docs,
file = file.path(BASED, "rda",
paste0("HCP_docs_", Sys.Date(), ".rda")))
SHA_url <- SHA_table$Doc_Link
SHA_spp <- SHA_table$Species
SHA_data <- mcmapply(get_conservation_plan_data,
SHA_url, SHA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
SHA_data <- bind_rows(SHA_data)
save(SHA_data,
file = file.path(BASED, "rda",
paste0("SHA_data_", Sys.Date(), ".rda")))
SHA_docs <- mcmapply(get_conservation_plan_doc_links,
SHA_url, SHA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
SHA_docs <- bind_rows(SHA_docs)
save(SHA_docs,
file = file.path(BASED, "rda",
paste0("SHA_docs_", Sys.Date(), ".rda")))
CCA_url <- CCA_table$Doc_Link
CCA_spp <- CCA_table$Species
CCA_data <- mcmapply(get_conservation_plan_data,
CCA_url, CCA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCA_data <- bind_rows(CCA_data)
save(CCA_data,
file = file.path(BASED, "rda",
paste0("CCA_data_", Sys.Date(), ".rda")))
CCA_docs <- mcmapply(get_conservation_plan_doc_links,
CCA_url, CCA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCA_docs <- bind_rows(CCA_docs)
save(CCA_docs,
file = file.path(BASED, "rda",
paste0("CCA_docs_", Sys.Date(), ".rda")))
CCAA_url <- CCAA_table$Doc_Link
CCAA_spp <- CCAA_table$Species
CCAA_data <- mcmapply(get_conservation_plan_data,
CCAA_url, CCAA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCAA_data <- bind_rows(CCAA_data)
save(CCAA_data,
file = file.path(BASED, "rda",
paste0("CCAA_data_", Sys.Date(), ".rda")))
CCAA_docs <- mcmapply(get_conservation_plan_doc_links,
CCAA_url, CCAA_spp,
SIMPLIFY = FALSE,
USE.NAMES = FALSE,
mc.cores = NCORE,
mc.preschedule = FALSE)
CCAA_docs <- bind_rows(CCAA_docs)
save(CCAA_docs,
file = file.path(BASED, "rda",
paste0("CCAA_docs_", Sys.Date(), ".rda")))
rm(list=ls())
